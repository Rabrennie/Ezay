!function(){"use strict";function n(t){var e=t.options.el;if("string"==typeof e&&(e=document.querySelector(e)),null==e)throw"Could not bind to element";t.dom=function t(e){var o=[];for(var r=0;r<e.childNodes.length;r++){var i=e.childNodes[r];o.push(t(i))}return{type:e.nodeName,props:s(e),children:o}}(e),t.on("state-update",function(t){var e=function t(e,o,r){var i=this;if("#text"===e.type)return d(e,o);this.data.hasOwnProperty(e.type.toLowerCase())&&(o=this.data[e.type.toLowerCase()],r=e.type.toLowerCase());var n=document.createElement(e.type);for(var s in e.props)e.props.hasOwnProperty(s)&&function(){var t=e.props[s];n.setAttribute(s,t),"ezay:click"==s&&n.addEventListener("click",function(){return o[t].call(i.models[r])})}();for(var a=0;a<e.children.length;a++){var c=e.children[a];n.appendChild(t.call(this,c,o,r))}return n}.call(this,this.dom,{},""),o=document.querySelector("[data-ezay-id=".concat(this.dom.props["data-ezay-id"],"]"));o.parentNode.replaceChild(e,o)}.bind(t))}function s(t){return"#text"==t.nodeName?{textContent:t.textContent}:(t.setAttribute("data-ezay-id","_"+Math.random().toString(36).substr(2,9)),t&&Array.prototype.reduce.call(t.attributes,function(t,e){return t[e.name]=e.value,t},{})||{})}function d(t,e){for(var o,r=/{{\s*([a-zA-Z0-9]+)\s*}}/g,i=t.props.textContent;o=r.exec(i);){var n="";null!==e[o[1]]&&(n=e[o[1]]),i=i.replace(o[0],n)}return document.createTextNode(i)}function t(t){for(var e in this.options=Object.create(null),t)if(t.hasOwnProperty(e)){var o=t[e];void 0!==this.constructor.options[e]&&(this.options[e]=o)}for(var r in this.constructor.options)if(this.constructor.options.hasOwnProperty(r)){var i=this.constructor.options[r];if(void 0===this.options[r]){if(i.required)throw"Option ".concat(r," is required.");void 0!==i.default&&(this.options[r]=i.default)}}n(this)}function e(t,e){this.options[t]=Object.create(null),this.options[t].required=!!e.required,this.options[t].default=e.default}function o(t,e){void 0===this.eventListeners[t]&&(this.eventListeners[t]=[]),this.eventListeners[t].push(e)}function r(t,e){if(void 0!==this.eventListeners[t])for(var o=0;o<this.eventListeners[t].length;o++)this.eventListeners[t][o](e)}function i(o,r){if(void 0!==this.data[o])throw"Model "+o+" already registered.";for(var t in this.models[o]=r,this.data[o]=Object.create(null),Object.defineProperty(r,"$add",{configurable:!1,enumerable:!1,value:function(t,e){c.call(this,this.data[o],r,t,e)}.bind(this)}),r)r.hasOwnProperty(t)&&c.call(this,this.data[o],r,t);this.update()}function a(t,e){this.dispatch("state-update",{data:t,prop:e})}function c(e,t,o,r){var i=this;e[o]=void 0!==r?r:t[o],Object.defineProperty(t,o,{get:function(){return e[o]},set:function(t){e[o]=t,i.update(e,o)}})}function p(t){this._init(t)}var u,h,l,f;(u=p).options=Object.create({}),u.registerOption=e,u.prototype._init=t,(h=p).prototype.eventListeners=Object.create({}),h.prototype.on=o,h.prototype.dispatch=r,(l=p).prototype.data=Object.create({}),l.prototype.models=Object.create({}),l.prototype.register=i,l.prototype.update=a,(f=p).registerOption("el",{required:!0}),f.prototype.dom=Object.create({}),null!=window&&(window.Ezay=p)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
